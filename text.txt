from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import requests

# Function to process Terabox links
def process_link(update: Update, context: CallbackContext) -> None:
    user_message = update.message.text.strip()

    # Check if the message contains a valid Terabox link
    if "https://terabox.com/s/" in user_message:
        try:
            # Extract the unique code
            unique_code = user_message.split("/s/")[1].strip()

            # Format the Watching API URL
            api_url = f"https://terabox.com/sharing/embed?surl={unique_code}"

            # Send a request to the Watching API
            response = requests.get(api_url)

            # Send the response back to the user
            if response.status_code == 200:
                update.message.reply_text(f"✅ Success! API called: {api_url}\nResponse: {response.text}")
            else:
                update.message.reply_text(
                    f"❌ Failed to process link.\nAPI returned status code: {response.status_code}\nResponse: {response.text}"
                )
        except Exception as e:
            update.message.reply_text(f"⚠️ Error processing the link: {str(e)}")
    else:
        update.message.reply_text("⚠️ Please send a valid Terabox link.")

# Start command
def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text("👋 Welcome! Send me a Terabox link, and I'll process it for you.")

# Main function
def main():
    # Replace 'YOUR_BOT_TOKEN' with your actual bot token
    updater = Updater("YOUR_BOT_TOKEN")

    dispatcher = updater.dispatcher

    # Command handler for /start
    dispatcher.add_handler(CommandHandler("start", start))

    # Message handler for processing links
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, process_link))

    # Start the bot
    updater.start_polling()
    updater.idle()

if name == 'main':
    main()